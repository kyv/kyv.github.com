<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | ki-ai.org]]></title>
  <link href="http://ki-ai.org/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://ki-ai.org/"/>
  <updated>2013-11-16T15:01:58-06:00</updated>
  <id>http://ki-ai.org/</id>
  <author>
    <name><![CDATA[ki-ai.org]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Comparación‎ de Duración de Audios]]></title>
    <link href="http://ki-ai.org/blog/2013/06/19/compare-lengths-of-wav-files/"/>
    <updated>2013-06-19T09:38:00-05:00</updated>
    <id>http://ki-ai.org/blog/2013/06/19/compare-lengths-of-wav-files</id>
    <content type="html"><![CDATA[<p>Estaba editando video. Grabamos el audio aparte del imagen.
Ahora al momento de editar, lo encontré algo tedioso buscar cual audio de todos
combinaba con cada scena de video. Pensaba que deberia existir un utilidad que
al menos compara el duracion de audios, pero no encontré. Entonces
escribí uno en python que compara dos carpetas de ficheros .wav. Demuestra cuales
ficheros entre las dos carpetas se aproximan más en terminos de duración en segundos.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>TASCAM_0011.wav: 12, CANON_1080.wav: 15
</span><span class='line'>TASCAM_0013.wav: 13, CANON_1080.wav: 15
</span><span class='line'>TASCAM_0004.wav: 25, CANON_1069.wav: 27
</span><span class='line'>TASCAM_0006.wav: 34, CANON_1095.wav: 38
</span><span class='line'>TASCAM_0007.wav: 38, CANON_1095.wav: 38
</span><span class='line'>TASCAM_0012.wav: 40, CANON_1095.wav: 38
</span><span class='line'>TASCAM_0009.wav: 48, CANON_1121.wav: 56
</span><span class='line'>TASCAM_0005.wav: 63, CANON_1071.wav: 62
</span><span class='line'>TASCAM_0003.wav: 64, CANON_1071.wav: 62
</span><span class='line'>TASCAM_0015.wav: 65, CANON_1071.wav: 62
</span><span class='line'>TASCAM_0008.wav: 129, CANON_1068.wav: 151
</span><span class='line'>TASCAM_0014.wav: 409, CANON_1068.wav: 151
</span><span class='line'>TASCAM_0016.wav: 948, CANON_1068.wav: 151</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!-- more -->


<p>Es unicamente un punto de partida. Pero así podemos ver cuales audio tienen
mayor probabilidad de coresponder a un video. Se ejecuta así: <code>python2 wavecmp carpeta1 carpeta2</code>.</p>

<p><div><script src='https://gist.github.com/5814824.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
